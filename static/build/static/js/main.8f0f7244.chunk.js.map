{"version":3,"sources":["components/ErrorPanel.js","components/ZipForm.js","components/ZipInfoPanel.js","services/service.js","App.js","index.js"],"names":["ErrorPanel","message","className","ZipForm","suggestions","placeholder","inputText","changeHandler","submitHandler","resetHandler","useState","suggestionIndex","setSuggestionIndex","onSubmit","ev","preventDefault","zipcode","target","value","trim","type","name","maxLength","autoComplete","onChange","onKeyDown","key","length","onClick","map","item","index","suggestion","uuidv4","ZipInfoPanel","zipCodeInfo","Object","keys","baseURL","zipCode","axios","get","then","response","catch","err","data","error","zipStr","App","setZipCode","setZipCodeInfo","updateSuggestions","requestZipcodeInfo","a","service","info","requestSuggestions","class","inputLength","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0f7244.chunk.js","sourcesContent":["import React from 'react'\n\nconst ErrorPanel = ({ message }) => {\n    return (\n        <div className=\"error-panel\">\n            <h3 className=\"heading\">\n                { message }\n            </h3>\n        </div>\n    )\n}\n\nexport default ErrorPanel","import React, { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst ZipForm = ({ \n    suggestions = [],\n\tplaceholder = '', \n\tinputText = '', \n    changeHandler,\n    submitHandler,\n    resetHandler,\n}) => {\n    let [suggestionIndex, setSuggestionIndex] = useState(-1)\n\n\tconst updateInput = ({ target: { value } }) => {\n\t\tchangeHandler(value.trim())\n    }\n\n    const onSubmit = (ev) => {\n        ev.preventDefault()\n        let zipcode = ev.target.zipcode.value.trim()\n        changeHandler(zipcode)\n        submitHandler(zipcode)\n    }\n\n    const selectSuggestion = ({ key }) => {\n\t\t/* Nothing to suggest */\n\t\tif( suggestions.length === 0 ) return \n        /* Cycle through the available suggestion suggestions or pick one */\n\t\tswitch(key) {\n\t\t\tcase 'Down': \n\t\t\tcase 'ArrowDown': {\n\t\t\t\tsuggestionIndex + 1 < suggestions.length \n\t\t\t\t\t? setSuggestionIndex(suggestionIndex + 1)\n\t\t\t\t\t: setSuggestionIndex(-1)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'Up':\n\t\t\tcase 'ArrowUp': {\n\t\t\t\tsuggestionIndex === - 1\n\t\t\t\t\t? setSuggestionIndex(suggestions.length - 1)\n\t\t\t\t\t: setSuggestionIndex(suggestionIndex - 1)\n\t\t\t\tbreak\n            }\n            case 'Enter': {\n                if(suggestionIndex !== -1) {\n                    changeHandler(suggestions[suggestionIndex])\n                }\n                submitHandler(suggestions[suggestionIndex])\n                setSuggestionIndex(-1)\n            }\n        }\n    }\n    \n    const handleSuggestionClick = suggestion => {\n\t\tsetSuggestionIndex(-1)\n\t\tchangeHandler(suggestion)\n\t}\n    \n\treturn (\n\t\t<form onSubmit={onSubmit}>\n            <div className=\"inputs\">\n                <input \n                    type=\"text\" \n                    value={inputText} \n                    name=\"zipcode\"\n                    maxLength=\"5\"\n                    autoComplete=\"off\"\n                    onChange={updateInput}\n                    onKeyDown={selectSuggestion}\n                    placeholder={placeholder} />\n                <button type=\"reset\" onClick={resetHandler}>Reset</button>\n            </div>\n            <div className=\"suggestions\">\n\t\t\t\t<ul>\n\t\t\t\t\t{ \n\t\t\t\t\t\tsuggestions.map((item, index) => {\n                        return <li \n                                    key={ uuidv4() } \n                                    className={`${index === suggestionIndex ? 'selected suggestion' : 'suggestion'}`} \n                                    onClick={() => handleSuggestionClick(item.trim())}>\n\t\t\t\t\t\t\t\t\t{ item }\n\t\t\t\t\t\t\t\t</li> \n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default ZipForm","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst ZipInfoPanel = ({ zipCodeInfo }) => {\n    return (\n        <div className=\"info-panel\">\n            <h2 className=\"heading\">Information for zip code { zipCodeInfo['zip code'] }</h2>\n            {\n                Object\n                    .keys(zipCodeInfo)\n                    .map(item => {\n                        return (\n                            <div className=\"info\" key={uuidv4()}>\n                                <p>\n                                    <span className=\"info-prop\">{item}: </span>\n                                    <span className=\"info-value\">{zipCodeInfo[item]}</span>\n                                </p>\n                            </div>\n                        )\n                    })\n            }\n        </div>\n    )\n}\n\nexport default ZipInfoPanel","import axios from 'axios'\n\nconst baseURL = 'http://ec2-3-131-153-220.us-east-2.compute.amazonaws.com/zipcodes'\n\nconst getZipcodeInfo = (zipCode) => {\n    return axios\n            .get(`${baseURL}/${zipCode}`)\n            .then(response => response)\n            .catch(err => ({...err.response.data, error: true}))\n}\n\nconst getZipcodeSuggestions = (zipStr) => {\n    return axios\n            .get(`${baseURL}/suggestions/${zipStr}`)\n            .then(response => response)\n            .catch(err => ({...err.response.data, error: true}))\n}\n\nexport default { getZipcodeInfo, getZipcodeSuggestions }","import React, { useState } from 'react'\nimport ErrorPanel from './components/ErrorPanel'\nimport ZipForm from './components/ZipForm'\nimport ZipInfoPanel from './components/ZipInfoPanel'\nimport service from './services/service'\nimport './styles.css'\n\nconst App = () => {\n  let [zipCode, setZipCode] = useState('')\n  let [zipCodeInfo, setZipCodeInfo] = useState(null)\n  let [suggestions, updateSuggestions] = useState([])\n\n  const changeHandler = zipCode => {\n    const inputLength = zipCode.length\n    setZipCode(zipCode)\n    if(inputLength < 3) {\n      return updateSuggestions([])\n    }\n    /* Enforce that user has typed at least the first three digits of a zip code to show some suggestions */\n    if(inputLength === 3 || inputLength === 4) {\n      return requestSuggestions(zipCode)\n    }\n    /* When a 5-digit zip code has been entered, check with the server to see if there's info about it */\n    if(inputLength === 5) {\n      return requestZipcodeInfo(zipCode) \n    }\n    \n  }\n\n  const requestZipcodeInfo = async (zipCode) => {\n    let info = await service.getZipcodeInfo(zipCode)\n    info.error ? setZipCodeInfo(info) : setZipCodeInfo(info.data)\n    updateSuggestions([])\n  }\n\n  const requestSuggestions = async (zipStr) => {\n    let response = await service.getZipcodeSuggestions(zipStr)\n    updateSuggestions(response.data.suggestions)\n  }\n\n  const resetHandler = () => {\n    setZipCode('')\n    setZipCodeInfo(null)\n    updateSuggestions([])\n  }\n\n  return (\n    <>\n      <h1 class=\"main-heading\">Zip code application</h1>\n      <div className=\"app\">\n        <ZipForm \n          placeholder=\"Enter a 5-digit zipcode\" \n          inputText={zipCode} \n          suggestions={suggestions}\n          changeHandler={zipCode => changeHandler(zipCode)}\n          submitHandler={requestZipcodeInfo}\n          resetHandler={resetHandler} />\n        <div className=\"zip-info\">\n          {\n            zipCodeInfo === null \n              ? zipCodeInfo\n              : zipCodeInfo.error ? <ErrorPanel message={zipCodeInfo.message} /> : <ZipInfoPanel zipCode={zipCode} zipCodeInfo={zipCodeInfo} />\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}